LINT_SETTINGS = golint,misspell,gocyclo,gocritic,whitespace,goconst,gocognit,bodyclose,unconvert,lll,unparam
# environment
VSCODE_LOG_STACK = false
# environment
VSCODE_IPC_HOOK_CLI = /tmp/vscode-ipc-89f1484f-3267-4154-a03a-3e17225bf8fc.sock
# default
.FEATURES := target-specific order-only second-expansion else-if shortest-stem undefine oneshell archives jobserver output-sync check-symlink load
# environment
LS_COLORS = rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:
# makefile (from 'Makefile', line 17)
NOFILE = 2048000
# automatic
%F = $(notdir $%)
# environment
VSCODE_PIPE_LOGGING = true
# makefile (from 'Makefile', line 16)
PWD = $(shell pwd)
# default
.LOADED := 
# environment
WSL_INTEROP = /run/WSL/563_interop
# environment
GOMODCACHE = /home/xanimo/go/pkg/mod
# environment
HOME = /home/xanimo
# environment
LESSCLOSE = /usr/bin/lesspipe %s %s
# environment
LOGNAME = xanimo
# environment
APPLICATION_INSIGHTS_NO_DIAGNOSTIC_CHANNEL = true
# makefile (from 'Makefile', line 14)
TEST_SCRIPT = go test ${GO_PACKAGES}
# environment
VSCODE_HANDLES_UNCAUGHT_ERRORS = true
# automatic
^D = $(patsubst %/,%,$(dir $^))
# environment
MAKELEVEL := 0
# default
MAKE = $(MAKE_COMMAND)
# default
MAKECMDGOALS := all
# environment
SHLVL = 0
# default
MAKE_VERSION := 4.2.1
# environment
USER = xanimo
# makefile
.DEFAULT_GOAL := deps
# environment
GOROOT = /usr/local/go
# environment
NAME = LAPTOP-SJP3V3G6
# automatic
%D = $(patsubst %/,%,$(dir $%))
# makefile (from 'Makefile', line 10)
GOVERALLS_CMD = go run github.com/mattn/goveralls
# environment
VSCODE_WSL_EXT_LOCATION = /mnt/c/Users/dakod/.vscode/extensions/ms-vscode-remote.remote-wsl-0.54.6
# default
MAKE_COMMAND := make
# default
.VARIABLES := 
# automatic
*F = $(notdir $*)
# makefile
MAKEFLAGS = pqrR
# environment
MFLAGS = -pqrR
# automatic
*D = $(patsubst %/,%,$(dir $*))
# makefile (from 'Makefile', line 7)
SPELLCHECK_CMD = go run github.com/client9/misspell/cmd/misspell
# automatic
+D = $(patsubst %/,%,$(dir $+))
# automatic
+F = $(notdir $+)
# default
MAKEFILES := 
# automatic
<F = $(notdir $<)
# makefile (from 'Makefile', line 11)
GOIMPORTS_CMD = go run golang.org/x/tools/cmd/goimports
# makefile (from 'Makefile', line 12)
GO_PACKAGES = ./services/... ./indexer/... ./dogecoin/...
# environment
HOSTTYPE = x86_64
# automatic
^F = $(notdir $^)
# default
SUFFIXES := 
# default
.INCLUDE_DIRS = /usr/include /usr/local/include /usr/include
# environment
VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH = /home/xanimo/.vscode-server/bin/c185983a683d14c396952dd432459097bc7f757f/remote/node_modules
# default
.RECIPEPREFIX := 
# makefile (from 'Makefile', line 5)
ADDLICENSE_CMD = go run github.com/google/addlicense
# environment
LANG = C.UTF-8
# environment
TERM = xterm-256color
# environment
VSCODE_EXTHOST_WILL_SEND_SOCKET = true
# environment
WSL_DISTRO_NAME = Ubuntu
# makefile (from 'Makefile', line 8)
GOLINES_CMD = go run github.com/segmentio/golines
# environment
MOTD_SHOWN = update-motd
# variable set hash-table stats:
# Load=84/1024=8%, Rehash=0, Collisions=6/110=5%

# Pattern-specific Variable Values

# No pattern-specific variable values.

# Directories

# . (device 2064, inode 81548): 26 files, no impossibilities.

# 26 files, no impossibilities in 1 directories.

# Implicit Rules

# No implicit rules.

# Files

build-release:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 29):
	# make sure to always set version with vX.X.X
	docker build -t rosetta-dogecoin:$(version) .;
	docker save rosetta-dogecoin:$(version) | gzip > rosetta-dogecoin-$(version).tar.gz;

run-testnet-online:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 40):
	docker run -d --rm --ulimit "nofile=${NOFILE}:${NOFILE}" -v "${PWD}/dogecoin-data:/data" -e "MODE=ONLINE" -e "NETWORK=TESTNET" -e "PORT=8080" -p 8080:8080 -p 44556:44556 rosetta-dogecoin:latest

# Not a target:
all:
#  Command line target.
#  Implicit rule search has been done.
#  File does not exist.
#  File has not been updated.

.PHONY: deps build run lint mocks run-mainnet-online run-mainnet-offline run-testnet-online run-testnet-offline check-comments add-license check-license shorten-lines test coverage spellcheck salus build-local coverage-local format check-format
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

run-mainnet-offline:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 37):
	docker run -d --rm -e "MODE=OFFLINE" -e "NETWORK=MAINNET" -e "PORT=8081" -p 8081:8081 rosetta-dogecoin:latest

deps:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 20):
	go get ./...

check-license:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 58):
	${ADDLICENCE_SCRIPT} -check .

format:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 64):
	gofmt -s -w -l .
	${GOIMPORTS_CMD} -w .

# Not a target:
Makefile:
#  Implicit rule search has been done.
#  Last modified 2021-04-01 23:26:34.9530949
#  File has been updated.
#  Successfully updated.

train:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 46):
	./zstd-train.sh $(network) transaction $(data-directory)

check-comments:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 49):
	${GOLINT_CMD} -set_exit_status ${GO_FOLDERS} .

test:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 72):
	${TEST_SCRIPT}

run-testnet-offline:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 43):
	docker run -d --rm -e "MODE=OFFLINE" -e "NETWORK=TESTNET" -e "PORT=8081" -p 8081:8081 rosetta-dogecoin:latest

build:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 23):
	docker build -t rosetta-dogecoin:latest https://github.com/rosetta-dogecoin/rosetta-dogecoin.git

spellcheck:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 84):
	${SPELLCHECK_CMD} -error .

build-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 26):
	docker build -t rosetta-dogecoin:latest .

add-license:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 55):
	${ADDLICENCE_SCRIPT} .

# Not a target:
.DEFAULT:
#  Implicit rule search has not been done.
#  Modification time never checked.
#  File has not been updated.

salus:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 81):
	docker run --rm -t -v ${PWD}:/home/repo coinbase/salus

 
run:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.

coverage:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 75):
	if [ "${COVERALLS_TOKEN}" ]; then ${TEST_SCRIPT} -coverprofile=c.out -covermode=count; ${GOVERALLS_CMD} -coverprofile=c.out -repotoken ${COVERALLS_TOKEN}; fi

coverage-local:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 78):
	${TEST_SCRIPT} -cover

mocks:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 87):
	rm -rf mocks;
	mockery --dir indexer --all --case underscore --outpkg indexer --output mocks/indexer;
	mockery --dir services --all --case underscore --outpkg services --output mocks/services;
	${ADDLICENCE_SCRIPT} .;

run-mainnet-online:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 34):
	docker run -d --rm --ulimit "nofile=${NOFILE}:${NOFILE}" -v "${PWD}/dogecoin-data:/data" -e "MODE=ONLINE" -e "NETWORK=MAINNET" -e "PORT=8080" -p 8080:8080 -p 22556:22556 rosetta-dogecoin:latest

lint: | check-comments
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 52):
	golangci-lint run --timeout 2m0s -v -E ${LINT_SETTINGS},gomnd

check-format:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 68):
	! gofmt -s -l . | read
	! ${GOIMPORTS_CMD} -l . | read

shorten-lines:
#  Phony target (prerequisite of .PHONY).
#  Implicit rule search has not been done.
#  File does not exist.
#  File has not been updated.
#  recipe to execute (from 'Makefile', line 61):
	${GOLINES_CMD} -w --shorten-comments ${GO_FOLDERS} .

# files hash-table stats:
# Load=28/1024=3%, Rehash=0, Collisions=0/80=0%
# VPATH Search Paths

# No 'vpath' search paths.

# No general ('VPATH' variable) search path.

# strcache buffers: 1 (0) / strings = 54 / storage = 568 B / avg = 10 B
# current buf: size = 8162 B / used = 568 B / count = 54 / avg = 10 B

# strcache performance: lookups = 103 / hit rate = 47%
# hash-table stats:
# Load=54/8192=1%, Rehash=0, Collisions=4/103=4%
# Finished Make data base on Sat Apr  3 16:49:23 2021

 
